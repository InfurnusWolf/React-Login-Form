{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malat\\\\OneDrive\\\\Desktop\\\\WizKidz\\\\WizKidz\\\\React-Login-Form\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Quiz.css';\n// const Quiz = () => {\n\n//   const quizQuestions = [\n//     {\n//       question: 'What is the capital of France?',\n//       options: ['Paris', 'Berlin', 'Rome', 'Madrid'],\n//       answer: 'Paris',\n//     },\n//     {\n//       question: 'Which planet is known as the Red Planet?',\n//       options: ['Earth', 'Mars', 'Venus', 'Jupiter'],\n//       answer: 'Mars',\n//     },\n//     {\n//       question: 'Who wrote \"Romeo and Juliet\"?',\n//       options: ['Charles Dickens', 'Jane Austen', 'William Shakespeare', 'Mark Twain'],\n//       answer: 'William Shakespeare',\n//     },\n//   ];\n\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [userAnswer, setUserAnswer] = useState(null);\n//   const [score, setScore] = useState(0);\n//   const [timer, setTimer] = useState(60); // Set initial timer value in seconds\n//   const [quizCompleted, setQuizCompleted] = useState(false);\n\n//   useEffect(() => {\n//     const timerInterval = setInterval(() => {\n//       setTimer((prevTimer) => prevTimer - 1);\n//     }, 1000);\n\n//     return () => {\n//       clearInterval(timerInterval);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     if (timer === 0) {\n//       endQuiz();\n//     }\n//   }, [timer]);\n\n//   const handleAnswer = (selectedAnswer) => {\n//     setUserAnswer(selectedAnswer);\n//   };\n\n//   const handleSubmit = () => {\n//     if (userAnswer === quizQuestions[currentQuestion].answer) {\n//       setScore((prevScore) => prevScore + 1);\n//     }\n//   };\n\n//   const handleNext = () => {\n//     if (currentQuestion < quizQuestions.length - 1) {\n//       setCurrentQuestion((prevQuestion) => prevQuestion + 1);\n//       setUserAnswer(null); // Reset user's answer for the next question\n//     } else {\n//       endQuiz();\n//     }\n//   };\n\n//   const endQuiz = () => {\n//     // Handle quiz completion logic, e.g., show results\n//     setQuizCompleted(true);\n//   };\n\n//   return (\n//     <div className=\"quiz-app\">\n//       {quizCompleted ? (\n//         <div className=\"quiz-results\">\n//           <h1>Quiz Completed!</h1>\n//           <p>Your score: {score} out of {quizQuestions.length}</p>\n//         </div>\n//       ) : (\n//         <div className=\"quiz-content\">\n//           <p>Timer: {timer} seconds</p>\n//           <h2>{quizQuestions[currentQuestion].question}</h2>\n//           {/* Display options for the current question */}\n//           {quizQuestions[currentQuestion].options.map((option) => (\n//             <button\n//               key={option}\n//               onClick={() => handleAnswer(option)}\n//               disabled={userAnswer !== null}\n//             >\n//               {option}\n//             </button>\n//           ))}\n//           <button onClick={handleSubmit} disabled={userAnswer === null}>\n//             Submit\n//           </button>\n//           <button onClick={handleNext}>Next</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Quiz;\n// import React, { useRef, useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import \"./Quiz.css\";\n// import { data } from \"./data\";\n\n// const Quiz = () => {\n//   let [index, setIndex] = useState(0);\n//   let [question, setQuestion] = useState(data[index]);\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./Quiz.css\";\nimport { data } from \"./data\";\n\n// Function to shuffle an array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\nconst Quiz = () => {\n  _s();\n  // Shuffle the data array and get the first 5 elements\n  const quizData = shuffle(data).slice(0, 5);\n  let [index, setIndex] = useState(0);\n  let [question, setQuestion] = useState(quizData[index]);\n  // Rest of your code...\n  let [lock, setLock] = useState(false);\n  let [score, setScore] = useState(0);\n  let [result, setResult] = useState(false);\n  let [timeLeft, setTimeLeft] = useState(30);\n  let Option1 = useRef(null);\n  let Option2 = useRef(null);\n  let Option3 = useRef(null);\n  let Option4 = useRef(null);\n  let option_array = [Option1, Option2, Option3, Option4];\n  const checkAns = (e, ans) => {\n    if (lock === false) {\n      if (question.ans === ans) {\n        e.target.classList.add(\"correct\");\n        setLock(true);\n        setScore(prev => prev + 1);\n      } else {\n        e.target.classList.add(\"wrong\");\n        setLock(true);\n        option_array[question.ans - 1].current.classList.add(\"correct\");\n      }\n    }\n  };\n  const next = () => {\n    if (lock === true) {\n      if (index === quizData.length - 1) {\n        // Use quizData.length instead of data.length\n        setResult(true);\n        return 0;\n      }\n      setIndex(prevIndex => prevIndex + 1);\n      setQuestion(quizData[index + 1]); // Use quizData instead of data\n      setLock(false);\n      setTimeLeft(30);\n      option_array.forEach(option => {\n        option.current.classList.remove(\"wrong\");\n        option.current.classList.remove(\"correct\");\n      });\n    }\n  };\n\n  // const next = () => {\n  //   if (lock === true) {\n  //     if (index === data.length - 1) {\n  //       setResult(true);\n  //       return 0;\n  //     }\n  //     setIndex((prevIndex) => prevIndex + 1);\n  //     setQuestion(quizData[index + 1]);\n  //     setLock(false);\n  //     setTimeLeft(30);\n  //     option_array.forEach((option) => {\n  //       option.current.classList.remove(\"wrong\");\n  //       option.current.classList.remove(\"correct\");\n  //     });\n  //   }\n  // };\n\n  const getButtonLabel = () => {\n    return index === data.length - 1 ? \"Submit\" : \"Next\";\n  };\n  const reset = () => {\n    setIndex(0);\n    setQuestion(quizData[0]);\n    setScore(0);\n    setLock(false);\n    setResult(false);\n    setTimeLeft(30);\n  };\n  React.useEffect(() => {\n    if (timeLeft > 0 && lock === false) {\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    } else if (timeLeft === 0 && lock === false) {\n      // Automatically submit the quiz when the timer hits 0\n      // submitQuiz();\n      setIndex(prevIndex => prevIndex + 1);\n      setQuestion(quizData[index + 1]);\n      setTimeLeft(30);\n    }\n  }, [timeLeft, lock]);\n  const submitQuiz = () => {\n    // Additional logic to handle quiz submission\n    setResult(true);\n  };\n  const calculateIQ = () => {\n    const rawIQ = score / 5 * 100;\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), result ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You Scored \", score, \" out of \", quizData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Certificate\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"certificate\",\n          children: \"Go to Certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [index + 1, \".\", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          ref: Option1,\n          onClick: e => {\n            checkAns(e, 1);\n          },\n          children: question.option1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: Option2,\n          onClick: e => {\n            checkAns(e, 2);\n          },\n          children: question.option2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: Option3,\n          onClick: e => {\n            checkAns(e, 3);\n          },\n          children: question.option3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: Option4,\n          onClick: e => {\n            checkAns(e, 4);\n          },\n          children: question.option4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: getButtonLabel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: [index + 1, \" of \", quizData.length, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", timeLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"jdMNyG6HjWzN2afWv5mBibe3wH4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useNavigate","Link","data","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","Quiz","_s","quizData","slice","index","setIndex","question","setQuestion","lock","setLock","score","setScore","result","setResult","timeLeft","setTimeLeft","Option1","Option2","Option3","Option4","option_array","checkAns","e","ans","target","classList","add","prev","current","next","prevIndex","forEach","option","remove","getButtonLabel","reset","timer","setInterval","prevTime","clearInterval","submitQuiz","calculateIQ","rawIQ","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","ref","option1","option2","option3","option4","_c","$RefreshReg$"],"sources":["C:/Users/malat/OneDrive/Desktop/WizKidz/WizKidz/React-Login-Form/src/components/Quiz.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Quiz.css';\r\n// const Quiz = () => {\r\n  \r\n//   const quizQuestions = [\r\n//     {\r\n//       question: 'What is the capital of France?',\r\n//       options: ['Paris', 'Berlin', 'Rome', 'Madrid'],\r\n//       answer: 'Paris',\r\n//     },\r\n//     {\r\n//       question: 'Which planet is known as the Red Planet?',\r\n//       options: ['Earth', 'Mars', 'Venus', 'Jupiter'],\r\n//       answer: 'Mars',\r\n//     },\r\n//     {\r\n//       question: 'Who wrote \"Romeo and Juliet\"?',\r\n//       options: ['Charles Dickens', 'Jane Austen', 'William Shakespeare', 'Mark Twain'],\r\n//       answer: 'William Shakespeare',\r\n//     },\r\n//   ];\r\n\r\n\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [userAnswer, setUserAnswer] = useState(null);\r\n//   const [score, setScore] = useState(0);\r\n//   const [timer, setTimer] = useState(60); // Set initial timer value in seconds\r\n//   const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const timerInterval = setInterval(() => {\r\n//       setTimer((prevTimer) => prevTimer - 1);\r\n//     }, 1000);\r\n\r\n//     return () => {\r\n//       clearInterval(timerInterval);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (timer === 0) {\r\n//       endQuiz();\r\n//     }\r\n//   }, [timer]);\r\n\r\n//   const handleAnswer = (selectedAnswer) => {\r\n//     setUserAnswer(selectedAnswer);\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     if (userAnswer === quizQuestions[currentQuestion].answer) {\r\n//       setScore((prevScore) => prevScore + 1);\r\n//     }\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     if (currentQuestion < quizQuestions.length - 1) {\r\n//       setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n//       setUserAnswer(null); // Reset user's answer for the next question\r\n//     } else {\r\n//       endQuiz();\r\n//     }\r\n//   };\r\n\r\n//   const endQuiz = () => {\r\n//     // Handle quiz completion logic, e.g., show results\r\n//     setQuizCompleted(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"quiz-app\">\r\n//       {quizCompleted ? (\r\n//         <div className=\"quiz-results\">\r\n//           <h1>Quiz Completed!</h1>\r\n//           <p>Your score: {score} out of {quizQuestions.length}</p>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"quiz-content\">\r\n//           <p>Timer: {timer} seconds</p>\r\n//           <h2>{quizQuestions[currentQuestion].question}</h2>\r\n//           {/* Display options for the current question */}\r\n//           {quizQuestions[currentQuestion].options.map((option) => (\r\n//             <button\r\n//               key={option}\r\n//               onClick={() => handleAnswer(option)}\r\n//               disabled={userAnswer !== null}\r\n//             >\r\n//               {option}\r\n//             </button>\r\n//           ))}\r\n//           <button onClick={handleSubmit} disabled={userAnswer === null}>\r\n//             Submit\r\n//           </button>\r\n//           <button onClick={handleNext}>Next</button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Quiz;\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import \"./Quiz.css\";\r\n// import { data } from \"./data\";\r\n\r\n// const Quiz = () => {\r\n//   let [index, setIndex] = useState(0);\r\n//   let [question, setQuestion] = useState(data[index]);\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./Quiz.css\";\r\nimport { data } from \"./data\";\r\n\r\n// Function to shuffle an array\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nconst Quiz = () => {\r\n  // Shuffle the data array and get the first 5 elements\r\n  const quizData = shuffle(data).slice(0, 5);\r\n\r\n  let [index, setIndex] = useState(0);\r\n  let [question, setQuestion] = useState(quizData[index]);\r\n  // Rest of your code...\r\n  let [lock, setLock] = useState(false);\r\n  let [score, setScore] = useState(0);\r\n  let [result, setResult] = useState(false);\r\n  let [timeLeft, setTimeLeft] = useState(30);\r\n  \r\n\r\n  let Option1 = useRef(null);\r\n  let Option2 = useRef(null);\r\n  let Option3 = useRef(null);\r\n  let Option4 = useRef(null);\r\n\r\n  let option_array = [Option1, Option2, Option3, Option4];\r\n\r\n  const checkAns = (e, ans) => {\r\n    if (lock === false) {\r\n      if (question.ans === ans) {\r\n        e.target.classList.add(\"correct\");\r\n        setLock(true);\r\n        setScore((prev) => prev + 1);\r\n      } else {\r\n        e.target.classList.add(\"wrong\");\r\n        setLock(true);\r\n        option_array[question.ans - 1].current.classList.add(\"correct\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    if (lock === true) {\r\n      if (index === quizData.length - 1) { // Use quizData.length instead of data.length\r\n        setResult(true);\r\n        return 0;\r\n      }\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n      setQuestion(quizData[index + 1]); // Use quizData instead of data\r\n      setLock(false);\r\n      setTimeLeft(30);\r\n      option_array.forEach((option) => {\r\n        option.current.classList.remove(\"wrong\");\r\n        option.current.classList.remove(\"correct\");\r\n      });\r\n    }\r\n  };\r\n\r\n  // const next = () => {\r\n  //   if (lock === true) {\r\n  //     if (index === data.length - 1) {\r\n  //       setResult(true);\r\n  //       return 0;\r\n  //     }\r\n  //     setIndex((prevIndex) => prevIndex + 1);\r\n  //     setQuestion(quizData[index + 1]);\r\n  //     setLock(false);\r\n  //     setTimeLeft(30);\r\n  //     option_array.forEach((option) => {\r\n  //       option.current.classList.remove(\"wrong\");\r\n  //       option.current.classList.remove(\"correct\");\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  const getButtonLabel = () => {\r\n    return index === data.length - 1 ? \"Submit\" : \"Next\";\r\n  };\r\n\r\n  const reset = () => {\r\n    setIndex(0);\r\n    setQuestion(quizData[0]);\r\n    setScore(0);\r\n    setLock(false);\r\n    setResult(false);\r\n    setTimeLeft(30);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (timeLeft > 0 && lock === false) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    } else if (timeLeft === 0 && lock === false) {\r\n      // Automatically submit the quiz when the timer hits 0\r\n      // submitQuiz();\r\n      setIndex((prevIndex)=>prevIndex+1);\r\n      setQuestion(quizData[index+1]);\r\n      setTimeLeft(30);\r\n    }\r\n  }, [timeLeft, lock]);\r\n  \r\n  const submitQuiz = () => {\r\n    // Additional logic to handle quiz submission\r\n    setResult(true);\r\n  };\r\n  const calculateIQ= () => {\r\n    const rawIQ = (score/5)*100\r\n    return\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Quiz App </h1>\r\n      <hr />\r\n      {result ? (\r\n        <>\r\n          <h2>You Scored {score} out of {quizData.length}</h2>\r\n          <button onClick={reset}>Reset</button>\r\n          {/* <Link to={{pathname: '/certificate',state: { username: 'John Doe', score: 100 }}}>Go to Certificate</Link> */}\r\n          <Link to=\"/Certificate\"><button className=\"certificate\">Go to Certificate</button></Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>{index + 1}.{question.question}</h2>\r\n          <ul>\r\n            <li ref={Option1} onClick={(e) => { checkAns(e, 1) }}>\r\n              {question.option1}\r\n            </li>\r\n            <li ref={Option2} onClick={(e) => { checkAns(e, 2) }}>\r\n              {question.option2}\r\n            </li>\r\n            <li ref={Option3} onClick={(e) => { checkAns(e, 3) }}>\r\n              {question.option3}\r\n            </li>\r\n            <li ref={Option4} onClick={(e) => { checkAns(e, 4) }}>\r\n              {question.option4}\r\n            </li>\r\n          </ul>\r\n          <button onClick={next}>{getButtonLabel()}</button>\r\n          <div className=\"index\">\r\n            {index + 1} of {quizData.length} questions\r\n            </div>\r\n          {/* <div className=\"index\">\r\n            {index + 1} of {data.length} questions\r\n          </div> */}\r\n          <div className=\"timer\">Time Left: {timeLeft}</div>\r\n          \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module"}